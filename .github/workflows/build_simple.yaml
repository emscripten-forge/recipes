name: build simple
on:
  push:
    branches:
      - 'main'
  pull_request:
  schedule:
    - cron: "0 13 * * 1"
jobs:

  build_simple:
    if: (github.event_name == 'schedule' && github.repository == 'emscripten-forge/recipes') || (github.event_name != 'schedule')
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: emscripten-wasm32
      GITHUB_OWNER: "emscripten-forge"
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.45"]

    steps:
      ################################################################
      # SETUP
      ################################################################
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      ################################################################
      # CONFIG
      ################################################################
      - name: Global config
        shell: bash -el {0}
        run: git config --global advice.detachedHead false

      ################################################################
      # MAMBA
      ################################################################
      - name: Install micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ci_env.yml
          environment-name: ci
          init-shell: bash
          cache-environment: true
          post-cleanup: 'all'

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: Post env install config
        shell: bash -el {0}
        run: |
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME

      ################################################################
      # EMSDK
      ################################################################
      - name: Setup emsdk
        shell: bash -el {0}
        run: |
          ./emsdk/setup_emsdk.sh ${{ matrix.emsdk_ver }} $(pwd)/emsdk_install

      ################################################################
      # Build compiler pkg
      ################################################################
      - name: Build emscripten compiler
        shell: bash -el {0}
        run: |
          python -m emci build explicit $GITHUB_WORKSPACE/recipes/recipes/emscripten_emscripten-wasm32  --n-retry=3 
      
      ################################################################
      # Build pytester
      ################################################################
      - name: Build pytester
        shell: bash -el {0}
        run: |
          python -m emci build explicit $GITHUB_WORKSPACE/recipes/recipes/pytester
      
      ################################################################
      # Build a regex package
      ################################################################
      - name: Build regex
        shell: bash -el {0}
        run: |
          python -m emci build explicit $GITHUB_WORKSPACE/recipes/recipes_emscripten/regex --emscripten-wasm32 --n-retry=3
      
      ################################################################
      # Build a package which is **not** on emscripten forge
      ################################################################
      - name: Build package not on emscripten-forge (advanced)
        shell: bash -el {0}
        run: |
          python -m emci build explicit $GITHUB_WORKSPACE/test_recipes/only_py_tests --emscripten-wasm32 --n-retry=3