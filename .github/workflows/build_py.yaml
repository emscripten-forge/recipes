name: Build All
on: [push]

jobs:

  build_minimal:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: emscripten-32
      GITHUB_OWNER: "emscripten-forge"
      CONDA_EMSDK_DIR: /src/emsdk
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.2"]

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2


      ################################################################
      # timestamp
      ################################################################
      - name: generate cache timestamp
        id: cache_timestamp
        shell: bash -l {0}
        run: echo ::set-output name=timestamp::"$(TZ=UTC date +%F)"


      ################################################################
      # CONFIG
      ################################################################
      - name: global config
        shell: bash -l {0}
        run: |
          git config --global advice.detachedHead false
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME
          mkdir -p $HOME/src/emsdk

      ################################################################
      # MAMBA
      ################################################################
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ci_env.yml
          environment-name: ci-env

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: post env install config
        shell: bash -l {0}
        run: |
          mkdir -p $HOME/micromamba/envs/ci-env/conda-bld/emscripten-32
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc_post $HOME/.condarc

      ################################################################
      # Pull packages
      ################################################################
      - name: pull already uploaded packages
        shell: bash -l {0}
        run: |
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}

      ################################################################
      # EMSCRIPTEN ITSELF
      ################################################################
      - name: install emsdk
        shell: bash -l {0}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/src/emsdk
          pushd $HOME/src/emsdk
          ./emsdk install ${{matrix.emsdk_ver}}
          popd

      ################################################################
      # install / clone custom non-master things
      ################################################################   
      - name: "install custom non-master dependencies"
        shell: bash -l {0}
        run: |
          micromamba activate ci-env
          python -m pip install git+https://github.com/emscripten-forge/emboa
          python -m pip install git+https://github.com/DerThorsten/boa.git@emscripten_monkeypatch
          python -m pip install git+https://github.com/DerThorsten/bitfurnace.git@emscripten_new
          

      ################################################################
      # build things
      ################################################################   
      - name: "build things"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/emscripten_emscripten-32 --skip-existing
          boa build  $GITHUB_WORKSPACE/recipes/bitfurnace               --skip-existing
          boa build  $GITHUB_WORKSPACE/recipes/zlib                     --skip-existing --target-platform=emscripten-32 
          boa build  $GITHUB_WORKSPACE/recipes/sqlite                   --skip-existing --target-platform=emscripten-32 


      ################################################################
      # create env from above build packages
      ################################################################  
      - name: "build things"
        shell: bash -l {0}
        run: |
          micromamba create -n emtest  --platform=emscripten-32 zlib sqlite

  build_all:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: emscripten-32
      GITHUB_OWNER: "emscripten-forge"
      CONDA_EMSDK_DIR: /src/emsdk
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.2"]
        skip_exisiting: ["","--skip-existing"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      ################################################################
      # timestamp
      ################################################################
      - name: generate cache timestamp
        id: cache_timestamp
        shell: bash -l {0}
        run: echo ::set-output name=timestamp::"$(TZ=UTC date +%F)"

      ################################################################
      # CONFIG
      ################################################################
      - name: global config
        shell: bash -l {0}
        run: |
          git config --global advice.detachedHead false
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME
          mkdir -p $HOME/src/emsdk

      ################################################################
      # MAMBA
      ################################################################
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ci_env.yml
          environment-name: ci-env

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: post env install config
        shell: bash -l {0}
        run: |
          mkdir -p $HOME/micromamba/envs/ci-env/conda-bld/emscripten-32
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc_post $HOME/.condarc

      ################################################################
      # Pull packages
      ################################################################
      - name: pull already uploaded packages
        shell: bash -l {0}
        run: |
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}


      ################################################################
      # EMSCRIPTEN ITSELF
      ################################################################
      - name: install emsdk
        shell: bash -l {0}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/src/emsdk
          pushd $HOME/src/emsdk
          ./emsdk install ${{matrix.emsdk_ver}}
          popd

      ################################################################
      # install / clone custom non-master things
      ################################################################   
      - name: "install custom non-master dependencies"
        shell: bash -l {0}
        run: |
          micromamba activate ci-env
          python -m pip install git+https://github.com/emscripten-forge/emboa
          python -m pip install git+https://github.com/DerThorsten/boa.git@emscripten_monkeypatch
          python -m pip install git+https://github.com/DerThorsten/bitfurnace.git@emscripten_new


      ################################################################
      # build packages
      ################################################################   
      - name: "emscripten_emscripten-32"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/emscripten_emscripten-32  --skip-existing  

      - name: "bitfurnace"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/bitfurnace --skip-existing    

      - name: "zlib"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/zlib ${{matrix.skip_exisiting}} --target-platform=emscripten-32   

      - name: "sqlite"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/sqlite ${{matrix.skip_exisiting}} --target-platform=emscripten-32 

      - name: "libffi"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/libffi ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      - name: "bzip2"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/bzip2 ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      - name: "python_abi"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/python_abi ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      - name: "python"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/python ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      - name: "pybind11"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/pybind11 ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      - name: "embind11"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/embind11 ${{matrix.skip_exisiting}} --target-platform=emscripten-32

      ################################################################
      # create env from above build packages
      ################################################################  
      - name: "create emscripten-32 env"
        shell: bash -l {0}
        run: |
          micromamba create -n emforgetest  --platform=emscripten-32 python pybind11 embind11 six parso

      ################################################################
      # pack things
      ################################################################  
      - name: "Pack things"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          pushd $CONDA_EMSDK_DIR
          ./emsdk activate 3.1.2
          source emsdk_env.sh
          popd
          export FILE_PACKAGER=$CONDA_EMSDK_DIR/upstream/emscripten/tools/file_packager.py
          micromamba activate ci-env
          mkdir -p $HOME/serve
          cd $HOME/serve
          emboa pack python core $HOME/micromamba/envs/emforgetest --version=3.10
          emboa pack python pure-so \
              $HOME/micromamba/envs/emforgetest \
              $HOME/micromamba/envs/emforgetest/lib/python3.10/site-packages/embind11_side.so \
              embind11_side \
              --version=3.10
          emboa pack python pure-so \
              $HOME/micromamba/envs/emforgetest \
              $HOME/micromamba/envs/emforgetest/lib/python3.10/site-packages/embind11_side2.so \
              embind11_side2 \
              --version=3.10
          cp $HOME/micromamba/envs/emforgetest/bin/embed.js .
          cp $HOME/micromamba/envs/emforgetest/bin/embed.wasm .
          cp $HOME/micromamba/envs/emforgetest/bin/embind11.html .


      ################################################################
      # upload packages
      ################################################################   

      - uses: actions/upload-artifact@v2
        with:
          name: micromamba_pkgs
          path: ~/micromamba/envs/ci-env/conda-bld/**/*.tar.bz2 # or path/to/artifact

      - name: create_oras_push
        shell: bash -l {0}
        run: |
          python ./upload_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./upload_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./upload_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
        if: always()

  deploy:
    runs-on: ubuntu-latest
    needs: [build_all]
    env:
      TARGET_PLATFORM: emscripten-32
      GITHUB_OWNER: "emscripten-forge"
      CONDA_EMSDK_DIR: /src/emsdk
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.2"]

    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2

      ################################################################
      # timestamp
      ################################################################
      - name: generate cache timestamp
        id: cache_timestamp
        shell: bash -l {0}
        run: echo ::set-output name=timestamp::"$(TZ=UTC date +%F)"

      ################################################################
      # CONFIG
      ################################################################
      - name: global config
        shell: bash -l {0}
        run: |
          git config --global advice.detachedHead false
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME
          mkdir -p $HOME/src/emsdk

      ################################################################
      # MAMBA
      ################################################################
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ci_env.yml
          environment-name: ci-env

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: post env install config
        shell: bash -l {0}
        run: |
          mkdir -p $HOME/micromamba/envs/ci-env/conda-bld/emscripten-32
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc_post $HOME/.condarc

      ################################################################
      # Pull packages
      ################################################################
      - name: pull already uploaded packages
        shell: bash -l {0}
        run: |
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}


      ################################################################
      # EMSCRIPTEN ITSELF
      ################################################################
      - name: install emsdk
        shell: bash -l {0}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/src/emsdk
          pushd $HOME/src/emsdk
          ./emsdk install ${{matrix.emsdk_ver}}
          popd

      ################################################################
      # install / clone custom non-master things
      ################################################################   
      - name: "install custom non-master dependencies"
        shell: bash -l {0}
        run: |
          micromamba activate ci-env
          python -m pip install git+https://github.com/emscripten-forge/emboa
          python -m pip install git+https://github.com/DerThorsten/boa.git@emscripten_monkeypatch
          python -m pip install git+https://github.com/DerThorsten/bitfurnace.git@emscripten_new


      ################################################################
      # build packages
      ################################################################   
      - name: "emscripten_emscripten-32"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/emscripten_emscripten-32  --skip-existing  

      - name: "bitfurnace"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/bitfurnace --skip-existing    

      - name: "zlib"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/zlib --skip-existing --target-platform=emscripten-32   

      - name: "sqlite"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/sqlite --skip-existing --target-platform=emscripten-32 

      - name: "libffi"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/libffi --skip-existing --target-platform=emscripten-32

      - name: "bzip2"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/bzip2 --skip-existing --target-platform=emscripten-32

      - name: "python_abi"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/python_abi --skip-existing --target-platform=emscripten-32

      - name: "python"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/python --skip-existing --target-platform=emscripten-32

      - name: "pybind11"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/pybind11 --skip-existing --target-platform=emscripten-32

      - name: "embind11"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          micromamba activate ci-env
          boa build  $GITHUB_WORKSPACE/recipes/embind11 --skip-existing --target-platform=emscripten-32


      ################################################################
      # create env from build packages
      ################################################################  
      - name: "create emscripten-32 env"
        shell: bash -l {0}
        run: |
          micromamba create -n emforgetest  --platform=emscripten-32 python pybind11 embind11 six parso


      ################################################################
      # pack things
      ################################################################  
      - name: "Pack things"
        shell: bash -l {0}
        run: |
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          pushd $CONDA_EMSDK_DIR
          ./emsdk activate 3.1.2
          source emsdk_env.sh
          popd
          export FILE_PACKAGER=$CONDA_EMSDK_DIR/upstream/emscripten/tools/file_packager.py
          micromamba activate ci-env
          mkdir -p $HOME/serve
          cd $HOME/serve
          emboa pack python core $HOME/micromamba/envs/emforgetest --version=3.10
          emboa pack python pure-so \
              $HOME/micromamba/envs/emforgetest \
              $HOME/micromamba/envs/emforgetest/lib/python3.10/site-packages/embind11_side.so \
              embind11_side \
              --version=3.10
          emboa pack python pure-so \
              $HOME/micromamba/envs/emforgetest \
              $HOME/micromamba/envs/emforgetest/lib/python3.10/site-packages/embind11_side2.so \
              embind11_side2 \
              --version=3.10
          cp $HOME/micromamba/envs/emforgetest/bin/embed.js .
          cp $HOME/micromamba/envs/emforgetest/bin/embed.wasm .
          cp $HOME/micromamba/envs/emforgetest/bin/embind11.html .


      ################################################################
      # deploy
      ################################################################   

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: /home/runner/serve
