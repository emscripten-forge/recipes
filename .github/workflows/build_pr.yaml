name: Build All
on: 
  - pull_request

jobs:

  build_packages:
    runs-on: ubuntu-latest
    env:
      TARGET_PLATFORM: emscripten-32
      GITHUB_OWNER: "emscripten-forge"
      CONDA_EMSDK_DIR: /src/emsdk
    strategy:
      fail-fast: false
      matrix:
        emsdk_ver: ["3.1.2"]
        build_name: ["minimal","python"]
        skip_exisiting: ["","--skip-existing"]
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      ################################################################
      # timestamp
      ################################################################
      - name: generate cache timestamp
        id: cache_timestamp
        shell: bash -l {0}
        run: echo ::set-output name=timestamp::"$(TZ=UTC date +%F)"

      ################################################################
      # CONFIG
      ################################################################
      - name: global config
        shell: bash -l {0}
        run: |
          git config --global advice.detachedHead false
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc $HOME
          cp $GITHUB_WORKSPACE/conda_build_config.yaml $HOME
          mkdir -p $HOME/src/emsdk

      ################################################################
      # MAMBA
      ################################################################
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: ci_env.yml
          environment-name: ci-env
          micromamba-version: '0.22.0'

      ################################################################
      # POST ENV INSTALL CONFIG
      ################################################################
      - name: post env install config
        shell: bash -l {0}
        run: |
          mkdir -p $HOME/micromamba/envs/ci-env/conda-bld/emscripten-32
          cp $GITHUB_WORKSPACE/.github/workflows/.condarc_post $HOME/.condarc

      ################################################################
      # Pull packages
      ################################################################
      - name: pull already uploaded packagesc
        if: ${{ matrix.skip_exisiting == '--skip-existing' }}
        shell: bash -l {0}
        run: |
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
          python ./pull_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}

      ################################################################
      # EMSCRIPTEN ITSELF
      ################################################################
      - name: install emsdk
        shell: bash -l {0}
        run: |
          git clone https://github.com/emscripten-core/emsdk.git $HOME/src/emsdk
          pushd $HOME/src/emsdk
          ./emsdk install ${{matrix.emsdk_ver}}
          popd

      ################################################################
      # install / clone custom non-master things
      ################################################################
      - name: "install custom non-master dependencies"
        shell: bash -l {0}
        run: |
          micromamba activate ci-env
          python -m pip install git+https://github.com/emscripten-forge/emboa@main
          python -m pip install git+https://github.com/DerThorsten/boa.git@emscripten_monkeypatch
          python -m pip install git+https://github.com/DerThorsten/bitfurnace.git@emscripten_new
          python -m pip install playwright
          playwright install

      ################################################################
      # build packages
      ################################################################
      - name: "build packages"
        shell: bash -l {0}
        run: |
          cd ${GITHUB_WORKSPACE}
          export CONDA_EMSDK_DIR=$HOME/src/emsdk
          pushd $CONDA_EMSDK_DIR
          ./emsdk activate ${{matrix.emsdk_ver}}
          source emsdk_env.sh
          export FILE_PACKAGER=$CONDA_EMSDK_DIR/upstream/emscripten/tools/file_packager.py
          popd
          ./build_packages.sh ${{matrix.build_name}}  # --skip-existing=fast


      # ################################################################
      # # upload packages
      # ################################################################

      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: micromamba_pkgs
      #     path: ~/micromamba/envs/ci-env/conda-bld/**/*.tar.bz2 # or path/to/artifact\
      #   if: ${{ matrix.skip_exisiting == '' }}

      # - name: create_oras_push
      #   shell: bash -l {0}
      #   run: |
      #     python ./upload_packages.py ${{ env.GITHUB_OWNER }} noarch        ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
      #     python ./upload_packages.py ${{ env.GITHUB_OWNER }} linux-64      ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
      #     python ./upload_packages.py ${{ env.GITHUB_OWNER }} emscripten-32 ${CONDA_PREFIX} ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ matrix.skip_exisiting == '' }}
