context:
  name: pplpy
  version: 0.8.10

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://files.pythonhosted.org/packages/92/d0/664f5ee65a8d9d071c2cdbfc8e42e0476b5b8c5ceefaa5fc9c2e1cd6fa5e/pplpy-${{ version }}.tar.gz
  sha256: d42a216c82914dcf4d7c000debc98bb336b8f83e026ba5d952cccd9f8074effd

build:
  number: 0
  # Note: This recipe requires PPL (Parma Polyhedra Library) and cysignals
  # which are not yet available for emscripten-wasm32
  skip: true  # [target_platform == "emscripten-wasm32"]

requirements:
  build:
    - python
    - cross-python_${{ target_platform }}
    - "${{ compiler('c') }}"
    - "${{ compiler('cxx') }}"
    - pip
    - cython
    - setuptools
  host:
    - python
    - gmpy2
    - cffi
    # TODO: Add when available for emscripten-wasm32:
    # - ppl  # Parma Polyhedra Library
    # - cysignals
  run:
    - python
    - gmpy2
    - cffi
    # TODO: Add when available for emscripten-wasm32:
    # - ppl
    # - cysignals

tests:
- script: pytester
  requirements:
    build:
    - pytester
    run:
    - pytester-run
  files:
    recipe:
    - test_import_pplpy.py

about:
  homepage: https://github.com/sagemath/pplpy
  license: GPL-3.0
  license_file: COPYING
  summary: Python PPL wrapper - Python interface to the Parma Polyhedra Library
  description: |
    pplpy is a Python wrapper for the Parma Polyhedra Library (PPL).
    It provides Python bindings to manipulate convex polyhedra and other 
    numerical abstractions. This package requires PPL and cysignals libraries
    which need to be ported to emscripten-wasm32 first.

extra:
  recipe-maintainers:
  - Copilot