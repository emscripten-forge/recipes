context:
  version: 1.7.0
  llvm_version: 20.1.6

package:
  name: cppinterop
  version: ${{ version }}

source:
  url: https://github.com/compiler-research/CppInterOp/archive/refs/tags/v${{ version
    }}.tar.gz
  sha256: 7208cee5da55043b9d121a7f0236ef09daada4a1c517b3bed611530eee325622

build:
  number: 5

requirements:
  build:
  - ${{ compiler("cxx") }}
  - cmake
  - make    # [unix]
  host:
  - llvm == ${{ llvm_version }}
  run:
  - clang-resource-headers == ${{ llvm_version }}

tests:
- package_contents:
    files:
    - lib/libclangCppInterOp.so


about:
  license: Apache-2.0 WITH LLVM-exception
  license_family: Apache
  license_file: LICENSE.TXT
  summary: |
    The CppInterOp library provides a minimalist approach for other languages
    to interoperate with C++ entities.
  description: |
    CppInterOp exposes API from Clang and LLVM in a backward compatibe way.
    The API support downstream tools that utilize interactive C++ by using
    the compiler as a service. That is, embed Clang and LLVM as a libraries
    in their codebases. The API are designed to be minimalistic and aid
    non-trivial tasks such as language interoperability on the fly. In such
    scenarios CppInterOp can be used to provide the necessary introspection
    information to the other side helping the language cross talk.
  homepage: https://github.com/compiler-research/CppInterOp
extra:
  recipe-maintainers:
  - alexander-penev
  - vgvassilev
  - mcbarton
  - anutosh491
