context:
  name: annotated-types
  version: "0.7.0"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://pypi.io/packages/source/${{ name[0] }}/${{ name|replace("-", "_") }}/${{ name|replace("-", "_") }}-${{ version }}.tar.gz
  sha256: aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89

build:
  number: 0
  script: ${PYTHON} -m pip install . ${PIP_ARGS}

requirements:
  build:
    - cross-python_${{ target_platform }}
    - python
    - setuptools
    - pip
    - hatchling
  host:
    - python
    - pip
  run:
    - python
    - typing_extensions >=4.0.0

about:
  homepage: https://github.com/annotated-types/annotated-types
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: Reusable constraint types to use with typing.Annotated
  description: |
    PEP-593 added typing.Annotated as a way of adding context-specific metadata
    to existing types, and specifies that Annotated[T, x] should be treated as T
    by any tool or library unless it specifically knows how to handle x.

tests:
- script: pytester
  requirements:
    build:
    - pytester
    run:
    - pytester-run
  files:
    recipe:
    - test_import_annotated_types.py
    
extra:
  recipe-maintainers:
    - copilot