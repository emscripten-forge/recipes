# Cross-compile file for creating a WebAssembly version of the preprocessor
# Requires emscripten to be installed
# Creates a .wasm and .js wrapper under <builddir>/src/
# Can be run locally with node.js using:
#  node --no-experimental-fetch dynare-preprocessor.js

[binaries]
cpp = 'em++'

[host_machine]
system = 'emscripten'
cpu_family = 'wasm32'
cpu = 'wasm32'
endian = 'little'

[properties]
# Itâ€™s necessary to use a different copy of Boost than the one under
# /usr/include, because otherwise GCC headers confuse Clang
#boost_root = '/path/to/boost'
# For accessing the local filesystem
; cpp_args = ['-fwasm-exceptions']
; cpp_link_args = ['--embed-file', 'example1.mod', '-o', 'dynare.html', '-fwasm-exceptions']
; cpp_args = ['-fexceptions']
cpp_args = ['-fexceptions', '-s WASM_BIGINT']
cpp_link_args = ['-fexceptions','-s WASM_BIGINT']
