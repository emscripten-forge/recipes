From 1ff168e1081acf86d27a6c3d7a090694331c89b5 Mon Sep 17 00:00:00 2001
From: Isabel Paredes <isabel.paredes@quantstack.net>
Date: Thu, 21 Aug 2025 17:50:15 +0200
Subject: [PATCH 05/19] Remove rpath

---
 configure | 91 ++++++++++++++++++++++++++++++++++++-------------------
 1 file changed, 59 insertions(+), 32 deletions(-)

diff --git a/configure b/configure
index 7ccf66e..f4ce382 100755
--- a/configure
+++ b/configure
@@ -24387,7 +24387,6 @@ test -z "$ac_objext" && ac_objext=o
 func_cc_basename $compiler
 cc_basename=$func_cc_basename_result
 
-
 # Only perform the check for file, if the check method requires it
 test -z "$MAGIC_CMD" && MAGIC_CMD=file
 case $deplibs_check_method in
@@ -24837,7 +24836,7 @@ lt_prog_compiler_static=
 	lt_prog_compiler_pic='-KPIC'
 	lt_prog_compiler_static='-static'
         ;;
-      *flang* | ftn | f18* | f95*)
+      *flang* | *flang-new* | ftn | f18* | f95*)
         # Flang compiler.
 	lt_prog_compiler_wl='-Wl,'
 	lt_prog_compiler_pic='-fPIC'
@@ -25376,7 +25375,7 @@ printf %s "checking whether the $compiler linker ($LD) supports shared libraries
     # are reset later if shared libraries are not supported. Putting them
     # here allows them to be overridden if necessary.
     runpath_var=LD_RUN_PATH
-    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+    hardcode_libdir_flag_spec=
     export_dynamic_flag_spec='$wl--export-dynamic'
     # ancient GNU ld didn't support --whole-archive et. al.
     if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
@@ -25575,13 +25574,13 @@ _LT_EOF
 
 	case $cc_basename in
 	tcc*)
-	  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	  hardcode_libdir_flag_spec='-L$libdir'
 	  export_dynamic_flag_spec='-rdynamic'
 	  ;;
 	xlf* | bgf* | bgxlf* | mpixlf*)
 	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
 	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
-	  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	  hardcode_libdir_flag_spec='-L$libdir'
 	  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
 	  if test yes = "$supports_anon_versioning"; then
 	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
@@ -25653,7 +25652,7 @@ _LT_EOF
 	  # DT_RUNPATH tag from executables and libraries.  But doing so
 	  # requires that you compile everything twice, which is a pain.
 	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	    hardcode_libdir_flag_spec='-L$libdir'
 	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	  else
@@ -26300,7 +26299,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'
       fi
       archive_cmds_need_lc='no'
-      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec='-L$libdir'
       hardcode_libdir_separator=:
       inherit_rpath=yes
       link_all_deplibs=yes
@@ -26312,7 +26311,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	# Fabrice Bellard et al's Tiny C Compiler
 	ld_shlibs=yes
 	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	hardcode_libdir_flag_spec='-L$libdir'
 	;;
       esac
       ;;
@@ -26334,7 +26333,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
     newsos6)
       archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
       hardcode_direct=yes
-      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec='-L$libdir'
       hardcode_libdir_separator=:
       hardcode_shlibpath_var=no
       ;;
@@ -26399,7 +26398,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
       fi
       archive_cmds_need_lc='no'
-      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec='-L$libdir'
       hardcode_libdir_separator=:
       ;;
 
@@ -26407,7 +26406,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
       if test yes = "$GCC"; then
 	allow_undefined_flag=' $wl-expect_unresolved $wl\*'
 	archive_cmds='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
-	hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	hardcode_libdir_flag_spec='-L$libdir'
       else
 	allow_undefined_flag=' -expect_unresolved \*'
 	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
@@ -27403,7 +27402,7 @@ linux*android*)
   dynamic_linker='Android linker'
   # -rpath works at least for libraries that are not overridden by
   # libraries installed in system locations.
-  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+  hardcode_libdir_flag_spec='-L$libdir'
   ;;
 
 # This must be glibc/ELF. NOTE: not emscripten
@@ -27738,6 +27737,7 @@ emscripten*)
   dynamic_linker="Emscripten linker"
   lt_prog_compiler_wl=
   lt_prog_compiler_pic='-fPIC'
+  lt_prog_compiler_pic_F77='-fPIC'
   archive_cmds='$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib'
   archive_expsym_cmds='$SED "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib -s EXPORTED_FUNCTIONS=@$output_objdir/$soname.expsym'
   archive_cmds_need_lc=no
@@ -28830,7 +28830,6 @@ $RM -r conftest*
   func_cc_basename $compiler
 cc_basename=$func_cc_basename_result
 
-
   if test -n "$compiler"; then
     # We don't want -fno-exception when compiling C++ code, so set the
     # no_builtin_flag separately
@@ -28963,7 +28962,7 @@ with_gnu_ld=$lt_cv_prog_gnu_ld
         archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname -o $lib'
         archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 
-        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+        hardcode_libdir_flag_spec_CXX='-L$libdir'
         export_dynamic_flag_spec_CXX='$wl--export-dynamic'
 
         # If archive_cmds runs LD, not CC, wlarc should be empty
@@ -29350,6 +29349,18 @@ fi
               $RM "$lt_outputfile.manifest";
             fi'
 	  ;;
+  *emcc* | *em++* | *flang* | *flang-new* | *emscripten*)
+    archive_cmds_CXX='$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib'
+    archive_expsym_cmds_CXX='$SED "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib -s EXPORTED_FUNCTIONS=@$output_objdir/$soname.expsym'
+    hardcode_libdir_flag_spec='-L$libdir'
+    hardcode_libdir_flag_spec_CXX='-L$libdir'
+    export_dynamic_flag_spec_CXX='$wl--export-all-symbols'
+    allow_undefined_flag_CXX=unsupported
+    always_export_symbols_CXX=no
+    enable_shared_with_static_runtimes_CXX=yes
+    file_list_spec_CXX='@'
+    ld_shlibs_CXX=yes
+    ;;
 	*)
 	  # g++
 	  # _LT_TAGVAR(hardcode_libdir_flag_spec, CXX) is actually meaningless,
@@ -29633,7 +29644,7 @@ fi
 	    link_all_deplibs_CXX=yes
 	    ;;
         esac
-        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+        hardcode_libdir_flag_spec_CXX='-L$libdir'
         hardcode_libdir_separator_CXX=:
         inherit_rpath_CXX=yes
         ;;
@@ -29743,7 +29754,7 @@ fi
 	    ;;
 	  xl* | mpixl* | bgxl*)
 	    # IBM XL 8.0 on PPC, with GNU ld
-	    hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+	    hardcode_libdir_flag_spec_CXX='-L$libdir'
 	    export_dynamic_flag_spec_CXX='$wl--export-dynamic'
 	    archive_cmds_CXX='$CC -qmkshrobj $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 	    if test yes = "$supports_anon_versioning"; then
@@ -29871,7 +29882,7 @@ fi
 	      osf3*)
 	        allow_undefined_flag_CXX=' $wl-expect_unresolved $wl\*'
 	        archive_cmds_CXX='$CC -shared$allow_undefined_flag $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags $wl-soname $soname `test -n "$verstring" && func_echo_all "$wl-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
-	        hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+	        hardcode_libdir_flag_spec_CXX='-L$libdir'
 		;;
 	      *)
 	        allow_undefined_flag_CXX=' -expect_unresolved \*'
@@ -29908,7 +29919,7 @@ fi
 		  ;;
 	      esac
 
-	      hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+	      hardcode_libdir_flag_spec_CXX='-L$libdir'
 	      hardcode_libdir_separator_CXX=:
 
 	      # Commands to make compiler produce verbose output that lists
@@ -30097,6 +30108,10 @@ fi
         ld_shlibs_CXX=no
         ;;
 
+      *emcc* | *em++* | *emscripten*)
+        ld_shlibs_CXX=yes
+        ;;
+
       *)
         # FIXME: insert proper C++ library support
         ld_shlibs_CXX=no
@@ -30468,7 +30483,9 @@ lt_prog_compiler_static_CXX=
       # Emscripten C++ compiler
       lt_prog_compiler_wl_CXX='-Wl'
       lt_prog_compiler_pic_CXX='-fPIC'
-      lt_prog_compiler_static_CXX='-static'
+      lt_prog_compiler_pic_F77='-fPIC'
+      lt_prog_compiler_static_CXX=''
+      lt_prog_compiler_can_build_shared_CXX=yes
       ;;
 	  KCC*)
 	    # KAI C++ Compiler
@@ -31576,7 +31593,7 @@ linux*android*)
   dynamic_linker='Android linker'
   # -rpath works at least for libraries that are not overridden by
   # libraries installed in system locations.
-  hardcode_libdir_flag_spec_CXX='$wl-rpath $wl$libdir'
+  hardcode_libdir_flag_spec_CXX='-L$libdir'
   ;;
 
 # This must be glibc/ELF. NOTE: not emscripten
@@ -31911,6 +31928,7 @@ emscripten*)
   dynamic_linker="Emscripten linker"
   lt_prog_compiler_wl_CXX=
   lt_prog_compiler_pic_CXX=='-fPIC'
+  lt_prog_compiler_pic_F77='-fPIC'
   archive_cmds_CXX='$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib'
   archive_expsym_cmds_CXX='$SED "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib -s EXPORTED_FUNCTIONS=@$output_objdir/$soname.expsym'
   archive_cmds_need_lc_CXX=no
@@ -32380,7 +32398,7 @@ lt_prog_compiler_static_F77=
 	lt_prog_compiler_pic_F77='-KPIC'
 	lt_prog_compiler_static_F77='-static'
         ;;
-      *flang* | ftn | f18* | f95*)
+      *flang* | *flang-new* | ftn | f18* | f95*)
         # Flang compiler.
 	lt_prog_compiler_wl_F77='-Wl,'
 	lt_prog_compiler_pic_F77='-fPIC'
@@ -32864,7 +32882,7 @@ printf %s "checking whether the $compiler linker ($LD) supports shared libraries
     # we just hope/assume this is gcc and not c89 (= MSVC++ or ICC)
     with_gnu_ld=yes
     ;;
-  linux* | k*bsd*-gnu | gnu* | emscripten* )
+  linux* | k*bsd*-gnu | gnu* | emscripten*)
     link_all_deplibs_F77=no
     ;;
   esac
@@ -32904,7 +32922,7 @@ printf %s "checking whether the $compiler linker ($LD) supports shared libraries
     # are reset later if shared libraries are not supported. Putting them
     # here allows them to be overridden if necessary.
     runpath_var=LD_RUN_PATH
-    hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+    hardcode_libdir_flag_spec_F77='-L$libdir'
     export_dynamic_flag_spec_F77='$wl--export-dynamic'
     # ancient GNU ld didn't support --whole-archive et. al.
     if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
@@ -33103,13 +33121,13 @@ _LT_EOF
 
 	case $cc_basename in
 	tcc*)
-	  hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+	  hardcode_libdir_flag_spec_F77='-L$libdir'
 	  export_dynamic_flag_spec_F77='-rdynamic'
 	  ;;
 	xlf* | bgf* | bgxlf* | mpixlf*)
 	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
 	  whole_archive_flag_spec_F77='--whole-archive$convenience --no-whole-archive'
-	  hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+	  hardcode_libdir_flag_spec_F77='-L$libdir'
 	  archive_cmds_F77='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
 	  if test yes = "$supports_anon_versioning"; then
 	    archive_expsym_cmds_F77='echo "{ global:" > $output_objdir/$libname.ver~
@@ -33181,7 +33199,7 @@ _LT_EOF
 	  # DT_RUNPATH tag from executables and libraries.  But doing so
 	  # requires that you compile everything twice, which is a pain.
 	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	    hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+	    hardcode_libdir_flag_spec_F77='-L$libdir'
 	    archive_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 	    archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	  else
@@ -33604,6 +33622,14 @@ fi
   fi
 
       ;;
+    emscripten*)
+      # Emscripten uses the LLVM linker, which supports the same options as
+      # GNU ld.
+      archive_cmds_F77='$CC $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+      archive_expsym_cmds_F77='$CC $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
+      hardcode_shlibpath_var_F77=no
+      ;;
 
     dgux*)
       archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
@@ -33761,7 +33787,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	archive_expsym_cmds_F77='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'
       fi
       archive_cmds_need_lc_F77='no'
-      hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
       hardcode_libdir_separator_F77=:
       inherit_rpath_F77=yes
       link_all_deplibs_F77=yes
@@ -33773,7 +33799,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	# Fabrice Bellard et al's Tiny C Compiler
 	ld_shlibs_F77=yes
 	archive_cmds_F77='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+	hardcode_libdir_flag_spec_F77='-L$libdir'
 	;;
       esac
       ;;
@@ -33795,7 +33821,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
     newsos6)
       archive_cmds_F77='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
       hardcode_direct_F77=yes
-      hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
       hardcode_libdir_separator_F77=:
       hardcode_shlibpath_var_F77=no
       ;;
@@ -33860,7 +33886,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
 	archive_cmds_F77='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
       fi
       archive_cmds_need_lc_F77='no'
-      hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+      hardcode_libdir_flag_spec_F77='-L$libdir'
       hardcode_libdir_separator_F77=:
       ;;
 
@@ -33868,7 +33894,7 @@ printf "%s\n" "$lt_cv_irix_exported_symbol" >&6; }
       if test yes = "$GCC"; then
 	allow_undefined_flag_F77=' $wl-expect_unresolved $wl\*'
 	archive_cmds_F77='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
-	hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+	hardcode_libdir_flag_spec_F77='-L$libdir'
       else
 	allow_undefined_flag_F77=' -expect_unresolved \*'
 	archive_cmds_F77='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
@@ -34691,7 +34717,7 @@ linux*android*)
   dynamic_linker='Android linker'
   # -rpath works at least for libraries that are not overridden by
   # libraries installed in system locations.
-  hardcode_libdir_flag_spec_F77='$wl-rpath $wl$libdir'
+  hardcode_libdir_flag_spec_F77='-L$libdir'
   ;;
 
 # This must be glibc/ELF. NOTE: not emscripten
@@ -35012,6 +35038,7 @@ emscripten*)
   dynamic_linker="Emscripten linker"
   lt_prog_compiler_wl_F77=
   lt_prog_compiler_pic_F77='-fPIC'
+  lt_prog_compiler_pic_CXX='-fPIC'
   archive_cmds_F77='$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib'
   archive_expsym_cmds_F77='$SED "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -sSIDE_MODULE=2 -shared $libobjs $deplibs $compiler_flags -o $lib -s EXPORTED_FUNCTIONS=@$output_objdir/$soname.expsym'
   archive_cmds_need_lc_F77=no
-- 
2.50.1

